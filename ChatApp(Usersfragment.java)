package com.example.demochatapp.Fragments;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;

public class UsersFragment extends Fragment {

    private RecyclerView recyclerView;

    private User Adapter
    userAdapter;

    private List<User> mUsers;

    EditText search_users;

    @Override

    public View onCreateView(LayoutInflater inflater, ViewGroup container,

                             Bundle savedInstanceState) {

// Inflate the Layout for this fragment
        View view=inflater.inflate(R.layout.fragment_users, container, attachToRoot false);
        recyclerView view.findViewById(R.id.recycler_view);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        mUsers = new ArrayList<>();
        readUsers();
        search_users = view. findViewById(R.id.search_users);
        search_users.addTextChangedListener(new TextWatcher() {

            @Override

            public void beforeTextChanged (CharSequence charSequence, int i, int il, int i2) {

            }

            @Override

            public void onTextChanged (CharSequence charSequence, int i, int il, int 12)
            { searchUsers (charSequence.toString().toLowerCase());

            }

            @Override

            public void after TextChanged (Editable editable) {
            }
        });

        return view;

    }
    private void searchUsers(final String s) {

        final FirebaseUser fuser= FirebaseAuth.getInstance().getCurrentUser();
        Query query FirebaseDatabase.getInstance().getReference( path: "Users").orderByChild("search").startAt(s).endAt(s+"\uf8ff");
        query.addValueEventListener(new ValueEventListener() {

            @Override

            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {

                musers.clear();

                for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
                    User user = snapshot.getValue(User.class);
                    assert user != null;
                    assert fuser !=null;

                    if(luser.getId().equalsIgnoreCase(fuser.getUid())){

                        mUsers.add(user);

                    }

                }

                user Adapter = new UserAdapter (getContext(),

                        recyclerView.setAdapter (user Adapter);

                mUsers, ischat: false);

            }

            @Override

            public void onCancelled (@lonNull DatabaseError databaseError) {

            }

        });
    }
    private void readUsers(){

        final FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser(); DatabaseReference reference = FirebaseDatabase.getInstance().getReference( path: "Users"); reference.addValueEventListener(new ValueEventListener() {

            @Override

            public void onDataChange (@NonNull DataSnapshot dataSnapshot) {

                mUsers.clear();

                if(search_users.getText().toString().equals("")){ for (DataSnapshot snapshot:dataSnapshot.getChildren()){
                    User user = snapshot.getValue(User.class);
                    assert user != null;
                    assert fuser !=null;

                    if(luser.getId().equalsIgnoreCase(fuser.getUid())){

                        mUsers.add(user);

                    }


                }
                    userAdapter = new UserAdapter (getContext(), mUsers, ischat: false);
                    recyclerView.setAdapter (user Adapter);


                }

            }

            @Override

            public void onCancelled (@NonNull DatabaseError databaseError) {
            }

        });
    }
}
